pipeline {
    agent any

    environment {
        AWS_ACCOUNT_ID="660056557839"
        AWS_DEFAULT_REGION="ap-southeast-2"
        AWS_CREDENTIAL = credentials('CREDENTIALS_FROM_JENKINS_SETUP')
        IMAGE_REPO_NAME="webdemo"
        IMAGE_TAG="latest"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
        REMOTE_USER="ubuntu"
        REMOTE_HOST="ec2-3-26-28-106.ap-southeast-2.compute.amazonaws.com"
    }
   
    stages {
        
        stage('Logging into AWS ECR') {
            steps {
                echo 'authenticate your Docker client to your registry'
                sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
            }      
        }
        
        stage('Building image') {
            steps {
                echo 'docker building images'
                sh 'docker build -t ${IMAGE_REPO_NAME}:$BUILD_NUMBER .'
            }
        }
    
        stage('Pushing to ECR') {
            steps {  
                echo 'pushing image to ECR......'
                sh "docker tag ${IMAGE_REPO_NAME}:$BUILD_NUMBER ${REPOSITORY_URI}:$IMAGE_TAG"
                sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
            }
        }
        
        stage('Deploy to EC2') {
            steps {
                echo 'Deploy to EC2......'
                sshagent(['64df2322-80ba-4f9c-9070-6ec335aa0663']) {
                    sh 'ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} "docker ps -q --filter ancestor=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME} | xargs -r docker stop"'
                    sh 'ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} "docker container prune -f || docker ps -a"'
                    sh 'ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} "docker system prune -f || docker image ls"'
                    sh 'ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"'
                    sh 'ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} "docker pull ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"'
                    sh 'ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} "docker run -d -p 80:80 -p 443:443 --name websitedemo ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"'
                }
            }
        }  
    }
}